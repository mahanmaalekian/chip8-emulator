#ifndef CHIP8_H
#define CHIP8_H
#include <cstdint>

class Chip8 {
    public:
        static const int MEMORY_SIZE = 4096;
        static const int REGISTER_COUNT = 16;
        static const int FONT_START_ADDR{0x50};
        static const int FONT_END_ADDR{0x9F};


        uint8_t memory[4096];
        uint16_t pc{0x200};
        uint16_t index_register{0};
        uint16_t *stack{};
        uint8_t delay_timer{0};
        uint8_t sound_timer{0};
        uint16_t variable_registers[16]{};
        uint16_t curr_instruction{0};
        uint8_t fontset[80] = {
            0xF0, 0x90, 0x90, 0x90, 0xF0, // 0
            0x20, 0x60, 0x20, 0x20, 0x70, // 1
            0xF0, 0x10, 0xF0, 0x80, 0xF0, // 2
            0xF0, 0x10, 0xF0, 0x10, 0xF0, // 3
            0x90, 0x90, 0xF0, 0x10, 0x10, // 4
            0xF0, 0x80, 0xF0, 0x10, 0xF0, // 5
            0xF0, 0x80, 0xF0, 0x90, 0xF0, // 6
            0xF0, 0x10, 0x20, 0x40, 0x40, // 7
            0xF0, 0x90, 0xF0, 0x90, 0xF0, // 8
            0xF0, 0x90, 0xF0, 0x10, 0xF0, // 9
            0xF0, 0x90, 0xF0, 0x90, 0x90, // A
            0xE0, 0x90, 0xE0, 0x90, 0xE0, // B
            0xF0, 0x80, 0x80, 0x80, 0xF0, // C
            0xE0, 0x90, 0x90, 0x90, 0xE0, // D
            0xF0, 0x80, 0xF0, 0x80, 0xF0, // E
            0xF0, 0x80, 0xF0, 0x80, 0x80  // F
        };
        Chip8();
        void init();
        void fetch();
        void decode();

};

#endif